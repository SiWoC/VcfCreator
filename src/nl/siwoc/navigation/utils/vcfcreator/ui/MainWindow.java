/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.siwoc.navigation.utils.vcfcreator.ui;

import java.awt.event.ActionEvent;
import java.io.File;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sourceforge.cardme.vcard.VCardImpl;
import net.sourceforge.cardme.vcard.errors.VCardError;
import nl.siwoc.navigation.utils.ParseException;
import nl.siwoc.navigation.utils.VcfCreator;

/**
 *
 * @author niekk
 */
public class MainWindow extends JFrame {
    private JFileChooser inputChooser;
    private JFileChooser outputChooser;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/resources/waypoint.png")).getImage());
        // yes the ISO 639 is not a stable standard,but I doubt it will change for nl, en and de
        if (getLocale().getLanguage().matches("nl|de") ) {
            enableFlag(getLocale().getLanguage());
        } else {
            enableFlag("en");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelInputFile = new javax.swing.JLabel();
        txtInputFile = new javax.swing.JTextField();
        btnBrowseInput = new javax.swing.JButton();
        labelOutputFolder = new javax.swing.JLabel();
        txtOutputFolder = new javax.swing.JTextField();
        btnBrowseOutput = new javax.swing.JButton();
        btnConvert = new javax.swing.JButton();
        labelPrefix = new javax.swing.JLabel();
        txtPrefix = new javax.swing.JTextField();
        imgInfo = new javax.swing.JLabel();
        btn_nl = new javax.swing.JButton();
        btn_en = new javax.swing.JButton();
        btn_de = new javax.swing.JButton();
        txtStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VcfCreator");
        setBounds(new java.awt.Rectangle(200, 200, 0, 0));
        setName("frameMain"); // NOI18N

        labelInputFile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelInputFile.setText(Localizer.getLocalizedText("LABEL_INPUT_FILE")); // NOI18N
        labelInputFile.setToolTipText("Input file");

        txtInputFile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnBrowseInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBrowseInput.setText(Localizer.getLocalizedText("BUTTON_BROWSE_INPUT")); // NOI18N
        btnBrowseInput.setToolTipText("Browse...");
        btnBrowseInput.setActionCommand("Browse_for_input_file");
        btnBrowseInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseInputActionPerformed(evt);
            }
        });

        labelOutputFolder.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelOutputFolder.setText(Localizer.getLocalizedText("LABEL_OUTPUT_FOLDER")); // NOI18N
        labelOutputFolder.setToolTipText("Output folder");

        txtOutputFolder.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtOutputFolder.setText("c:\\temp\\VcfOutput");

        btnBrowseOutput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBrowseOutput.setText(Localizer.getLocalizedText("BUTTON_BROWSE_OUTPUT")); // NOI18N
        btnBrowseOutput.setToolTipText("Browse...");
        btnBrowseOutput.setActionCommand("Browse_for_output_folder");
        btnBrowseOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseOutputActionPerformed(evt);
            }
        });

        btnConvert.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnConvert.setText(Localizer.getLocalizedText("BUTTON_CONVERT")); // NOI18N
        btnConvert.setToolTipText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        labelPrefix.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelPrefix.setText(Localizer.getLocalizedText("LABEL_ROUTE_PREFIX")); // NOI18N
        labelPrefix.setToolTipText("Route-prefix");

        txtPrefix.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPrefix.setText("a");

        imgInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/info.png"))); // NOI18N
        imgInfo.setText("imgInfo");
        imgInfo.setToolTipText("<html> VcfCreator 1.2.1<br> Â© Niek Knijnenburg 2012<br> schnappiroc@gmail.com </html>"); // NOI18N

        btn_nl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_nl.png"))); // NOI18N
        btn_nl.setToolTipText("nl");
        btn_nl.setActionCommand("nl_chosen");
        btn_nl.setBorder(null);
        btn_nl.setBorderPainted(false);
        btn_nl.setContentAreaFilled(false);
        btn_nl.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn_nl.setMaximumSize(new java.awt.Dimension(24, 18));
        btn_nl.setMinimumSize(new java.awt.Dimension(24, 18));
        btn_nl.setPreferredSize(new java.awt.Dimension(24, 18));
        btn_nl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nlActionPerformed(evt);
            }
        });

        btn_en.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_en.png"))); // NOI18N
        btn_en.setToolTipText("en");
        btn_en.setActionCommand("en_chosen");
        btn_en.setBorder(null);
        btn_en.setBorderPainted(false);
        btn_en.setContentAreaFilled(false);
        btn_en.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn_en.setMaximumSize(new java.awt.Dimension(24, 18));
        btn_en.setMinimumSize(new java.awt.Dimension(24, 18));
        btn_en.setPreferredSize(new java.awt.Dimension(24, 18));
        btn_en.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enActionPerformed(evt);
            }
        });

        btn_de.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_de.png"))); // NOI18N
        btn_de.setToolTipText("de");
        btn_de.setActionCommand("de_chosen");
        btn_de.setBorder(null);
        btn_de.setBorderPainted(false);
        btn_de.setContentAreaFilled(false);
        btn_de.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn_de.setMaximumSize(new java.awt.Dimension(24, 18));
        btn_de.setMinimumSize(new java.awt.Dimension(24, 18));
        btn_de.setPreferredSize(new java.awt.Dimension(24, 18));
        btn_de.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deActionPerformed(evt);
            }
        });

        txtStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtStatus.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelOutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOutputFolder)
                            .addComponent(txtInputFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBrowseInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBrowseOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_de, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_en, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_nl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imgInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInputFile)
                    .addComponent(txtInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOutputFolder)
                    .addComponent(txtOutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseOutput))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_en, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_nl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelPrefix)
                        .addComponent(txtPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtStatus)
                        .addComponent(imgInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_de, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseInputActionPerformed
        txtStatus.setText("");
        inputChooser = new JFileChooser();
        inputChooser.addChoosableFileFilter(new FileNameExtensionFilter("GPS Exchange Format (*.gpx)", "gpx"));
        inputChooser.addChoosableFileFilter(new FileNameExtensionFilter("OziExplorer Route File (*.rte)", "rte"));
        inputChooser.addChoosableFileFilter(new FileNameExtensionFilter("TomTom itinerary (*.itn)", "itn"));
        inputChooser.addChoosableFileFilter(new FileNameExtensionFilter("Google Earth, Google Maps Keyhole Markup Language (*.kml)", "kml"));
        inputChooser.addChoosableFileFilter(new FileNameExtensionFilter("TravelPilot (*.trp)", "trp"));
        inputChooser.setAcceptAllFileFilterUsed(true);
        inputChooser.setCurrentDirectory(new File(txtInputFile.getText()));
        inputChooser.setDialogTitle(Localizer.getLocalizedText("DIALOG_TITLE_INPUT"));
        inputChooser.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputChooserActionPerformed(evt);
            }

            private void inputChooserActionPerformed(ActionEvent evt) {
                File inputFile = inputChooser.getSelectedFile();
                if (inputFile != null) {
                    txtInputFile.setText(inputFile.getPath());
                }
            }
        });
        inputChooser.showOpenDialog(this);
    }//GEN-LAST:event_btnBrowseInputActionPerformed

    private void btnBrowseOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseOutputActionPerformed
        txtStatus.setText("");
        outputChooser = new JFileChooser(); 
        outputChooser.setCurrentDirectory(new File(txtOutputFolder.getText()));
        outputChooser.setDialogTitle(Localizer.getLocalizedText("DIALOG_TITLE_OUTPUT"));
        outputChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        outputChooser.setAcceptAllFileFilterUsed(false);
        outputChooser.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputChooserActionPerformed(evt);
            }

            private void outputChooserActionPerformed(ActionEvent evt) {
                File outputFolder = outputChooser.getSelectedFile();
                if (outputFolder != null) {
                    txtOutputFolder.setText(outputFolder.getAbsolutePath());
                }
            }
        });
        outputChooser.showOpenDialog(this);
    }//GEN-LAST:event_btnBrowseOutputActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
        txtStatus.setText("");
        File inputFile = new File(txtInputFile.getText());
        if (!inputFile.isFile()) {
            JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_INVALID_INPUT"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        File outputFolder = new File(txtOutputFolder.getText());
        if (outputFolder.isFile()) {
            JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_INVALID_OUTPUT"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!outputFolder.getAbsolutePath().matches(".*\\" + File.separator + "destinations")) {
            outputFolder = new File(txtOutputFolder.getText() + File.separator + "destinations");
        }
        if (outputFolder.isFile()) {
            JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_DEST_AS_FILE"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!outputFolder.isDirectory()) {
            //outputFolder = new File(txtOutputFolder.getText() + File.separator + "destinations");
            boolean folderCreated = outputFolder.mkdirs();
            if (!folderCreated) {
                JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_CREATE_OUTPUT"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (!txtPrefix.getText().matches("[a-zA-Z].*")) {
            JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_PREFIX_CHARACTER"), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        VcfCreator vcfCreator = new VcfCreator();
        vcfCreator.setPrefix(txtPrefix.getText());
        ArrayList<VCardImpl> vCards;
        try {
            vCards = vcfCreator.tryParseRte(inputFile);
            if (vCards == null || vCards.isEmpty()) {
                vCards = vcfCreator.tryParseRte2(inputFile);
            }
            if (vCards == null || vCards.isEmpty()) {
                vCards = vcfCreator.tryParseItn(inputFile);
            }
            if (vCards == null || vCards.isEmpty()) {
                vCards = vcfCreator.tryParseTrp(inputFile);
            }
            if (vCards == null || vCards.isEmpty()) {
                vCards = vcfCreator.tryParseKml(inputFile);
            }
            if (vCards == null || vCards.isEmpty()) {
                vCards = vcfCreator.tryParseGpx(inputFile);
            }
            if (vCards == null || vCards.isEmpty()) {
                JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_CONVERT_FAILED"), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            //System.out.println(vCards.get(14).getFormattedName().getFormattedName());
            List<VCardError> exportErrors = vcfCreator.export(vCards, outputFolder);
            if (exportErrors != null && exportErrors.size() > 0) {
                StringBuilder errorString = new StringBuilder();
                String newLine = "";
                for (VCardError error : exportErrors) {
                    errorString.append(error.getErrorMessage()).append(newLine);
                    if ("".equals(newLine)) {
                        newLine = "/n";
                    }
                }
                JOptionPane.showMessageDialog(this, errorString, "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                txtStatus.setText(MessageFormat.format(Localizer.getLocalizedText("MESSAGE_CREATED"), vCards.size()));
            }
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, Localizer.getLocalizedText("ERROR_CONVERT_FAILED"), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnConvertActionPerformed

    private void btn_nlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nlActionPerformed
        setLocale(new Locale("nl"));
        Localizer.setLocale(getLocale());
        localizeComponents();
    }//GEN-LAST:event_btn_nlActionPerformed

    private void btn_enActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enActionPerformed
        setLocale(Locale.ENGLISH);
        Localizer.setLocale(getLocale());
        localizeComponents();
    }//GEN-LAST:event_btn_enActionPerformed

    private void btn_deActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deActionPerformed
        setLocale(Locale.GERMAN);
        Localizer.setLocale(getLocale());
        localizeComponents();
    }//GEN-LAST:event_btn_deActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            /*
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            */
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseInput;
    private javax.swing.JButton btnBrowseOutput;
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btn_de;
    private javax.swing.JButton btn_en;
    private javax.swing.JButton btn_nl;
    private javax.swing.JLabel imgInfo;
    private javax.swing.JLabel labelInputFile;
    private javax.swing.JLabel labelOutputFolder;
    private javax.swing.JLabel labelPrefix;
    private javax.swing.JTextField txtInputFile;
    private javax.swing.JTextField txtOutputFolder;
    private javax.swing.JTextField txtPrefix;
    private javax.swing.JLabel txtStatus;
    // End of variables declaration//GEN-END:variables

    private void localizeComponents() {
        enableFlag(getLocale().getLanguage());
        btnBrowseInput.setText(Localizer.getLocalizedText("BUTTON_BROWSE_INPUT")); // NOI18N
        labelInputFile.setText(Localizer.getLocalizedText("LABEL_INPUT_FILE")); // NOI18N
        btnBrowseInput.setText(Localizer.getLocalizedText("BUTTON_BROWSE_INPUT")); // NOI18N
        labelOutputFolder.setText(Localizer.getLocalizedText("LABEL_OUTPUT_FOLDER")); // NOI18N
        btnBrowseOutput.setText(Localizer.getLocalizedText("BUTTON_BROWSE_OUTPUT")); // NOI18N
        btnConvert.setText(Localizer.getLocalizedText("BUTTON_CONVERT")); // NOI18N
        labelPrefix.setText(Localizer.getLocalizedText("LABEL_ROUTE_PREFIX")); // NOI18N
        if (inputChooser != null) {
            inputChooser.setDialogTitle(Localizer.getLocalizedText("DIALOG_TITLE_INPUT")); // NOI18N
        }
        if (outputChooser != null) {
            outputChooser.setDialogTitle(Localizer.getLocalizedText("DIALOG_TITLE_OUTPUT")); // NOI18N
        }
        UIManager.put("FileChooser.acceptAllFileFilterText", Localizer.getLocalizedText("FILECHOOSER_ACCEPTALLFILEFILTERTEXT"));
        UIManager.put("FileChooser.lookInLabelText", Localizer.getLocalizedText("FILECHOOSER_LOOKINLABELTEXT"));
        UIManager.put("FileChooser.cancelButtonText", Localizer.getLocalizedText("FILECHOOSER_CANCELBUTTONTEXT"));
        UIManager.put("FileChooser.cancelButtonToolTipText", Localizer.getLocalizedText("FILECHOOSER_CANCELBUTTONTOOLTIPTEXT"));
        UIManager.put("FileChooser.openButtonText", Localizer.getLocalizedText("FILECHOOSER_OPENBUTTONTEXT"));
        UIManager.put("FileChooser.openButtonToolTipText", Localizer.getLocalizedText("FILECHOOSER_OPENBUTTONTOOLTIPTEXT"));
        UIManager.put("FileChooser.filesOfTypeLabelText", Localizer.getLocalizedText("FILECHOOSER_FILESOFTYPELABELTEXT"));
        UIManager.put("FileChooser.fileNameLabelText", Localizer.getLocalizedText("FILECHOOSER_FILENAMELABELTEXT"));
        UIManager.put("FileChooser.listViewButtonToolTipText", Localizer.getLocalizedText("FILECHOOSER_LISTVIEWBUTTONTOOLTIPTEXT"));
        UIManager.put("FileChooser.listViewButtonAccessibleName", Localizer.getLocalizedText("FILECHOOSER_LISTVIEWBUTTONACCESSIBLENAME"));
        UIManager.put("FileChooser.detailsViewButtonToolTipText", Localizer.getLocalizedText("FILECHOOSER_DETAILSVIEWBUTTONTOOLTIPTEXT"));
        UIManager.put("FileChooser.detailsViewButtonAccessibleName", Localizer.getLocalizedText("FILECHOOSER_DETAILSVIEWBUTTONACCESSIBLENAME"));
        UIManager.put("FileChooser.upFolderToolTipText", Localizer.getLocalizedText("FILECHOOSER_UPFOLDERTOOLTIPTEXT"));
        UIManager.put("FileChooser.upFolderAccessibleName", Localizer.getLocalizedText("FILECHOOSER_UPFOLDERACCESSIBLENAME"));
        UIManager.put("FileChooser.newFolderToolTipText", Localizer.getLocalizedText("FILECHOOSER_NEWFOLDERTOOLTIPTEXT"));
        UIManager.put("FileChooser.newFolderAccessibleName", Localizer.getLocalizedText("FILECHOOSER_NEWFOLDERACCESSIBLENAME"));
        UIManager.put("FileChooser.homeFolderToolTipText", Localizer.getLocalizedText("FILECHOOSER_HOMEFOLDERTOOLTIPTEXT"));
        UIManager.put("FileChooser.homeFolderAccessibleName", Localizer.getLocalizedText("FILECHOOSER_HOMEFOLDERACCESSIBLENAME"));
        UIManager.put("FileChooser.fileNameHeaderText", Localizer.getLocalizedText("FILECHOOSER_FILENAMEHEADERTEXT"));
        UIManager.put("FileChooser.fileSizeHeaderText", Localizer.getLocalizedText("FILECHOOSER_FILESIZEHEADERTEXT"));
        UIManager.put("FileChooser.fileTypeHeaderText", Localizer.getLocalizedText("FILECHOOSER_FILETYPEHEADERTEXT"));
        UIManager.put("FileChooser.fileDateHeaderText", Localizer.getLocalizedText("FILECHOOSER_FILEDATEHEADERTEXT"));
        UIManager.put("FileChooser.fileAttrHeaderText", Localizer.getLocalizedText("FILECHOOSER_FILEATTRHEADERTEXT"));
    }

    private void enableFlag(String language) {
        btn_de.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_de" + (language.equals("de") ? "" : "_disabled") + ".png"))); // NOI18N
        btn_nl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_nl" + (language.equals("nl") ? "" : "_disabled") + ".png"))); // NOI18N
        btn_en.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/flag_en" + (language.equals("en") ? "" : "_disabled") + ".png"))); // NOI18N
    }
}
